name: Build and Test with Notification

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: echo "Building..."

      - name: Save build status
        id: save_build_status
        if: always()
        run: echo "var2=${{ job.status }}" >> $GITHUB_ENV

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: |
          echo "Testing..."
          exit 1  # Simulating a failure for demonstration

      - name: Save test status
        id: save_test_status
        if: always()
        run: echo "var1=${{ job.status }}" >> $GITHUB_ENV

  determine_status_and_notify:
    name: Determine Status and Notify Teams
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load mention IDs and names from JSON
        run: |
          MENTION_JSON=$(cat path/to/mention.json)
          ERROR_MENTION_ID=$(echo "$MENTION_JSON" | jq -r .ERROR_MENTION_ID)
          ERROR_MENTION_NAME=$(echo "$MENTION_JSON" | jq -r .ERROR_MENTION_NAME)
          SUCCESS_MENTION_ID=$(echo "$MENTION_JSON" | jq -r .SUCCESS_MENTION_ID)
          SUCCESS_MENTION_NAME=$(echo "$MENTION_JSON" | jq -r .SUCCESS_MENTION_NAME)

      - name: Set build and test statuses
        run: |
          build_status="${{ env.var2 }}"
          test_status="${{ env.var1 }}"
          echo "Build Status: $build_status"
          echo "Test Status: $test_status"
          
          # Determine overall status based on build_status and test_status
          if [ "$build_status" == "success" ] && [ "$test_status" == "success" ]; then
            echo "Overall Status: pass"
            echo "status=pass" >> $GITHUB_ENV
            STATUS="pass"
          else
            echo "Overall Status: fail"
            echo "status=fail" >> $GITHUB_ENV
            STATUS="fail"
          fi

      - name: Prepare Microsoft Teams payload
        run: |
          JOB_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          COMMIT_HASH="${GITHUB_SHA}" 
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          REPO_URL="[${{ github.repository }}](${{ github.event.repository.html_url }})"
          BUILD_NUMBER="${{ github.run_number }}"

          if [ "$STATUS" == "fail" ]; then
            status="FAIL ❌"
            color="attention"
            mentionedId="$ERROR_MENTION_ID"
            mentionedName="$ERROR_MENTION_NAME"
          else
            status="PASS ✅"
            color="good"
            mentionedId="$SUCCESS_MENTION_ID"
            mentionedName="$SUCCESS_MENTION_NAME"
          fi

          payload='{
            "type": "message",
            "attachments": [
              {
                "contentType": "application/vnd.microsoft.card.adaptive",
                "content": {
                  "type": "AdaptiveCard",
                  "body": [
                    {
                      "type": "TextBlock",
                      "text": "<at>'"$mentionedName"'</at>",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Job Name:** 'Build and Test Notification'",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Job URL:** [View Job]('"$JOB_URL"')",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Status:** '"$STATUS"'",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Repository URL:** '"$REPO_URL"'",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Build Number:** '"$BUILD_NUMBER"'",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Branch Name:** '"$BRANCH_NAME"'",
                      "color": "'"$color"'"
                    },
                    {
                      "type": "TextBlock",
                      "text": "**Latest Commit:** '"$COMMIT_HASH"'",
                      "color": "'"$color"'"
                    }
                  ],
                  "msteams": {
                    "entities": [
                      {
                        "type": "mention",
                        "text": "<at>'"$mentionedName"'</at>",
                        "mentioned": {
                          "id": "'"$mentionedId"'",
                          "name": "'"$mentionedName"'"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }'

          echo "$payload" > teams_payload.json  # Save payload to a JSON file
      - name: Send Microsoft Teams notification
        run: |
          curl -X POST \
            -H 'Content-Type: application/json' \
            -d @teams_payload.json \
            'https://amdcloud.webhook.office.com/webhookb2/133d4f16-689b-4281-a94b-44725b948c77@3dd8961f-e488-4e60-8e11-a82d994e183d/IncomingWebhook/20c43fc799fd49e9813582813c638323/f9e22351-f1c9-494f-88c5-8e04accf2ffe'
